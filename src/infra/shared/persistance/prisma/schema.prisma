generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String           @id @default(uuid())
  email                String           @unique
  passwordHash         String
  resetToken           String?
  resetTokenExpiration DateTime?
  name                 String
  gender               String
  country              String
  phone                String
  photo                String?
  verified             Boolean          @default(false)
  birthDate            DateTime
  appliedJobs          JobApplication[]
  savedJobs            Job[]            @relation("SavedJobs")
  createdAt            DateTime         @default(now())
  createdBy            String?          @db.VarChar(255)
  updatedAt            DateTime         @default(now()) @updatedAt
  updatedBy            String?          @db.VarChar(255)
  deletedAt            DateTime?
  deletedBy            String?          @db.VarChar(255)

  @@map("users")
}

model Job {
  id           String           @id @default(uuid())
  title        String
  description  String
  companyId    String
  location     String
  salaryRange  String
  jobType      String
  workType     String
  skillsTags   String[]
  company      Company          @relation(fields: [companyId], references: [id])
  applicants   JobApplication[]
  savedByUsers User[]           @relation("SavedJobs")
  createdAt    DateTime         @default(now())
  createdBy    String?          @db.VarChar(255)
  updatedAt    DateTime         @default(now()) @updatedAt
  updatedBy    String?          @db.VarChar(255)
  deletedAt    DateTime?
  deletedBy    String?          @db.VarChar(255)

  @@map("jobs")
}

model Company {
  id           String    @id @default(uuid())
  name         String    @unique
  supportEmail String    @unique
  people       String
  contact      String
  description  String
  industryType String
  location     String
  jobs         Job[]
  createdAt    DateTime  @default(now())
  createdBy    String?   @db.VarChar(255)
  updatedAt    DateTime  @default(now()) @updatedAt
  updatedBy    String?   @db.VarChar(255)
  deletedAt    DateTime?
  deletedBy    String?   @db.VarChar(255)

  @@map("companies")
}

model JobApplication {
  id        String   @id @default(uuid())
  userId    String
  jobId     String
  user      User     @relation(fields: [userId], references: [id])
  job       Job      @relation(fields: [jobId], references: [id])
  appliedAt DateTime @default(now())
  status    String   @default("pending")
  message   String?

  createdAt DateTime  @default(now())
  createdBy String?   @db.VarChar(255)
  updatedAt DateTime  @default(now()) @updatedAt
  updatedBy String?   @db.VarChar(255)
  deletedAt DateTime?
  deletedBy String?   @db.VarChar(255)

  @@map("job_applications")
}
